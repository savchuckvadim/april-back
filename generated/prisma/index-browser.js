
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AgentsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  portalId: 'portalId',
  rqId: 'rqId',
  type: 'type',
  name: 'name',
  code: 'code',
  number: 'number',
  withTax: 'withTax'
};

exports.Prisma.Bitrixfield_itemsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  bitrixfield_id: 'bitrixfield_id',
  name: 'name',
  title: 'title',
  code: 'code',
  bitrixId: 'bitrixId'
};

exports.Prisma.BitrixfieldsScalarFieldEnum = {
  id: 'id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  parent_type: 'parent_type',
  created_at: 'created_at',
  updated_at: 'updated_at',
  type: 'type',
  title: 'title',
  name: 'name',
  bitrixId: 'bitrixId',
  bitrixCamelId: 'bitrixCamelId',
  code: 'code'
};

exports.Prisma.BitrixlistsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title',
  bitrixId: 'bitrixId',
  portal_id: 'portal_id'
};

exports.Prisma.Btx_categoriesScalarFieldEnum = {
  id: 'id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  parent_type: 'parent_type',
  created_at: 'created_at',
  updated_at: 'updated_at',
  type: 'type',
  group: 'group',
  title: 'title',
  name: 'name',
  bitrixId: 'bitrixId',
  bitrixCamelId: 'bitrixCamelId',
  code: 'code',
  isActive: 'isActive'
};

exports.Prisma.Btx_companiesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  title: 'title',
  code: 'code',
  portal_id: 'portal_id'
};

exports.Prisma.Btx_dealsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  title: 'title',
  code: 'code',
  portal_id: 'portal_id'
};

exports.Prisma.Btx_leadsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  title: 'title',
  code: 'code',
  portal_id: 'portal_id'
};

exports.Prisma.Btx_rpasScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  title: 'title',
  code: 'code',
  type: 'type',
  image: 'image',
  bitrixId: 'bitrixId',
  typeId: 'typeId',
  description: 'description',
  entityTypeId: 'entityTypeId',
  forStageId: 'forStageId',
  forFilterId: 'forFilterId',
  crmId: 'crmId',
  portal_id: 'portal_id'
};

exports.Prisma.Btx_stagesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  btx_category_id: 'btx_category_id',
  name: 'name',
  title: 'title',
  code: 'code',
  bitrixId: 'bitrixId',
  color: 'color',
  isActive: 'isActive'
};

exports.Prisma.CallingsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title',
  bitrixId: 'bitrixId',
  portal_id: 'portal_id'
};

exports.Prisma.ClientsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name'
};

exports.Prisma.ContractsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  number: 'number',
  title: 'title',
  code: 'code',
  type: 'type',
  template: 'template',
  order: 'order',
  coefficient: 'coefficient',
  prepayment: 'prepayment',
  discount: 'discount',
  productName: 'productName',
  product: 'product',
  service: 'service',
  description: 'description',
  comment: 'comment',
  comment1: 'comment1',
  comment2: 'comment2',
  withPrepayment: 'withPrepayment'
};

exports.Prisma.CountersScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  title: 'title'
};

exports.Prisma.Deal_document_favoritesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  dealId: 'dealId',
  dealDocumentOptionId: 'dealDocumentOptionId',
  userId: 'userId',
  domain: 'domain',
  btxUserId: 'btxUserId',
  title: 'title',
  complectName: 'complectName',
  dealName: 'dealName',
  description: 'description',
  settings: 'settings',
  tag: 'tag',
  type: 'type',
  group: 'group',
  promotionName: 'promotionName',
  promotionCode: 'promotionCode',
  targetAudience: 'targetAudience'
};

exports.Prisma.Deal_document_optionsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  dealId: 'dealId',
  dealDocumentFavoriteId: 'dealDocumentFavoriteId',
  salePhrase: 'salePhrase',
  withStamp: 'withStamp',
  isPriceFirst: 'isPriceFirst',
  withManager: 'withManager',
  iblocksStyle: 'iblocksStyle',
  describStyle: 'describStyle',
  otherStyle: 'otherStyle',
  priceDiscount: 'priceDiscount',
  priceYear: 'priceYear',
  priceDefault: 'priceDefault',
  priceSupply: 'priceSupply',
  priceOptions: 'priceOptions',
  otherPrice: 'otherPrice',
  otherSettings: 'otherSettings',
  domain: 'domain',
  portalId: 'portalId',
  bxUserId: 'bxUserId',
  offer_template_id: 'offer_template_id',
  actionId: 'actionId'
};

exports.Prisma.DealsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  portalId: 'portalId',
  dealId: 'dealId',
  userId: 'userId',
  domain: 'domain',
  dealName: 'dealName',
  app: 'app',
  global: 'global',
  currentComplect: 'currentComplect',
  od: 'od',
  result: 'result',
  contract: 'contract',
  product: 'product',
  rows: 'rows',
  regions: 'regions',
  app_long: 'app_long',
  global_long: 'global_long',
  currentComplect_long: 'currentComplect_long',
  od_long: 'od_long',
  result_long: 'result_long',
  contract_long: 'contract_long',
  product_long: 'product_long',
  rows_long: 'rows_long',
  regions_long: 'regions_long'
};

exports.Prisma.DepartamentsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title',
  bitrixId: 'bitrixId',
  portal_id: 'portal_id'
};

exports.Prisma.DocumentsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.F_itemsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  code: 'code',
  fieldId: 'fieldId',
  order: 'order',
  value: 'value',
  bitrixId: 'bitrixId',
  fieldNumber: 'fieldNumber',
  fieldsId: 'fieldsId'
};

exports.Prisma.Failed_jobsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception',
  failed_at: 'failed_at'
};

exports.Prisma.FieldsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  name: 'name',
  code: 'code',
  type: 'type',
  isGeneral: 'isGeneral',
  isDefault: 'isDefault',
  isRequired: 'isRequired',
  value: 'value',
  description: 'description',
  bitixId: 'bitixId',
  bitrixTemplateId: 'bitrixTemplateId',
  isActive: 'isActive',
  isPlural: 'isPlural',
  isClient: 'isClient'
};

exports.Prisma.FilesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  code: 'code',
  type: 'type',
  path: 'path',
  parent: 'parent',
  parent_type: 'parent_type',
  entity_id: 'entity_id',
  size: 'size',
  format: 'format',
  availability: 'availability',
  entity_type: 'entity_type'
};

exports.Prisma.InfoblocksScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  name: 'name',
  title: 'title',
  description: 'description',
  descriptionForSale: 'descriptionForSale',
  shortDescription: 'shortDescription',
  weight: 'weight',
  code: 'code',
  inGroupId: 'inGroupId',
  groupId: 'groupId',
  isLa: 'isLa',
  isFree: 'isFree',
  isShowing: 'isShowing',
  isSet: 'isSet',
  parent_id: 'parent_id',
  relation_id: 'relation_id',
  related_id: 'related_id',
  excluded_id: 'excluded_id',
  group_id: 'group_id',
  isProduct: 'isProduct',
  isPackage: 'isPackage',
  tag: 'tag'
};

exports.Prisma.Info_groupsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  code: 'code',
  name: 'name',
  title: 'title',
  description: 'description',
  descriptionForSale: 'descriptionForSale',
  shortDescription: 'shortDescription',
  type: 'type',
  productType: 'productType'
};

exports.Prisma.JobsScalarFieldEnum = {
  id: 'id',
  queue: 'queue',
  payload: 'payload',
  attempts: 'attempts',
  reserved_at: 'reserved_at',
  available_at: 'available_at',
  created_at: 'created_at'
};

exports.Prisma.LinksScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  advertiser_id: 'advertiser_id',
  master_id: 'master_id',
  offer_id: 'offer_id',
  url: 'url',
  transitions: 'transitions',
  fail_transitions: 'fail_transitions'
};

exports.Prisma.MeasuresScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  shortName: 'shortName',
  fullName: 'fullName',
  code: 'code',
  type: 'type'
};

exports.Prisma.MigrationsScalarFieldEnum = {
  id: 'id',
  migration: 'migration',
  batch: 'batch'
};

exports.Prisma.OffersScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Personal_access_tokensScalarFieldEnum = {
  id: 'id',
  tokenable_type: 'tokenable_type',
  tokenable_id: 'tokenable_id',
  name: 'name',
  token: 'token',
  abilities: 'abilities',
  last_used_at: 'last_used_at',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Portal_contractsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  title: 'title',
  template: 'template',
  order: 'order',
  portal_id: 'portal_id',
  contract_id: 'contract_id',
  portal_measure_id: 'portal_measure_id',
  bitrixfield_item_id: 'bitrixfield_item_id',
  productName: 'productName',
  description: 'description'
};

exports.Prisma.Portal_measureScalarFieldEnum = {
  id: 'id',
  measure_id: 'measure_id',
  portal_id: 'portal_id',
  bitrixId: 'bitrixId',
  name: 'name',
  shortName: 'shortName',
  fullName: 'fullName',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PortalsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  domain: 'domain',
  key: 'key',
  C_REST_CLIENT_ID: 'C_REST_CLIENT_ID',
  C_REST_CLIENT_SECRET: 'C_REST_CLIENT_SECRET',
  C_REST_WEB_HOOK_URL: 'C_REST_WEB_HOOK_URL',
  number: 'number'
};

exports.Prisma.Price_row_cellsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  name: 'name',
  code: 'code',
  type: 'type',
  isActive: 'isActive',
  value: 'value',
  icon: 'icon'
};

exports.Prisma.Rq_counterScalarFieldEnum = {
  rq_id: 'rq_id',
  counter_id: 'counter_id',
  type: 'type',
  value: 'value',
  prefix: 'prefix',
  postfix: 'postfix',
  day: 'day',
  year: 'year',
  month: 'month',
  count: 'count',
  size: 'size'
};

exports.Prisma.RqsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  number: 'number',
  type: 'type',
  fullname: 'fullname',
  shortname: 'shortname',
  director: 'director',
  position: 'position',
  accountant: 'accountant',
  based: 'based',
  inn: 'inn',
  kpp: 'kpp',
  ogrn: 'ogrn',
  ogrnip: 'ogrnip',
  personName: 'personName',
  document: 'document',
  docSer: 'docSer',
  docNum: 'docNum',
  docDate: 'docDate',
  docIssuedBy: 'docIssuedBy',
  docDepCode: 'docDepCode',
  registredAdress: 'registredAdress',
  primaryAdresss: 'primaryAdresss',
  email: 'email',
  garantEmail: 'garantEmail',
  phone: 'phone',
  assigned: 'assigned',
  assignedPhone: 'assignedPhone',
  other: 'other',
  bank: 'bank',
  bik: 'bik',
  rs: 'rs',
  ks: 'ks',
  bankAdress: 'bankAdress',
  bankOther: 'bankOther',
  directorSignatureId: 'directorSignatureId',
  accountantSignatureId: 'accountantSignatureId',
  stampId: 'stampId',
  agentId: 'agentId'
};

exports.Prisma.SmartsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title',
  bitrixId: 'bitrixId',
  entityTypeId: 'entityTypeId',
  forStageId: 'forStageId',
  forFilterId: 'forFilterId',
  crmId: 'crmId',
  portal_id: 'portal_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  forStage: 'forStage',
  forFilter: 'forFilter',
  crm: 'crm'
};

exports.Prisma.T_fieldsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  code: 'code',
  name: 'name',
  templateId: 'templateId',
  fieldId: 'fieldId'
};

exports.Prisma.Telescope_entriesScalarFieldEnum = {
  sequence: 'sequence',
  uuid: 'uuid',
  batch_id: 'batch_id',
  family_hash: 'family_hash',
  should_display_on_index: 'should_display_on_index',
  type: 'type',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.Telescope_entries_tagsScalarFieldEnum = {
  entry_uuid: 'entry_uuid',
  tag: 'tag'
};

exports.Prisma.Telescope_monitoringScalarFieldEnum = {
  tag: 'tag'
};

exports.Prisma.Template_counterScalarFieldEnum = {
  template_id: 'template_id',
  counter_id: 'counter_id',
  value: 'value',
  prefix: 'prefix',
  day: 'day',
  year: 'year',
  month: 'month',
  count: 'count',
  size: 'size'
};

exports.Prisma.Template_fieldScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  template_id: 'template_id',
  field_id: 'field_id',
  fieldsId: 'fieldsId',
  templatesId: 'templatesId'
};

exports.Prisma.TemplatesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  code: 'code',
  type: 'type',
  link: 'link',
  portalId: 'portalId'
};

exports.Prisma.TimezonesScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  title: 'title',
  value: 'value',
  offset: 'offset',
  portal_id: 'portal_id'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  surname: 'surname',
  email: 'email',
  photo: 'photo',
  role_id: 'role_id',
  email_verified_at: 'email_verified_at',
  password: 'password',
  two_factor_secret: 'two_factor_secret',
  two_factor_recovery_codes: 'two_factor_recovery_codes',
  remember_token: 'remember_token',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AisScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  provider: 'provider',
  activity_id: 'activity_id',
  file_id: 'file_id',
  in_comment: 'in_comment',
  in_report: 'in_report',
  report_item_id: 'report_item_id',
  status: 'status',
  result: 'result',
  symbols_count: 'symbols_count',
  tokens_count: 'tokens_count',
  price: 'price',
  domain: 'domain',
  user_id: 'user_id',
  user_name: 'user_name',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  entity_name: 'entity_name',
  user_result: 'user_result',
  report_result: 'report_result',
  user_comment: 'user_comment',
  owner_comment: 'owner_comment',
  user_mark: 'user_mark',
  owner_mark: 'owner_mark',
  app: 'app',
  department: 'department',
  type: 'type',
  model: 'model',
  portal_id: 'portal_id',
  transcription_id: 'transcription_id'
};

exports.Prisma.Bitrix_app_placementsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  bitrix_app_id: 'bitrix_app_id',
  code: 'code',
  type: 'type',
  group: 'group',
  status: 'status',
  bitrix_heandler: 'bitrix_heandler',
  public_heandler: 'public_heandler',
  bitrix_codes: 'bitrix_codes'
};

exports.Prisma.Bitrix_app_secretsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  group: 'group',
  type: 'type',
  code: 'code',
  client_id: 'client_id',
  client_secret: 'client_secret'
};

exports.Prisma.Bitrix_appsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  portal_id: 'portal_id',
  group: 'group',
  type: 'type',
  code: 'code',
  status: 'status'
};

exports.Prisma.Bitrix_settingsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  settingable_id: 'settingable_id',
  settingable_type: 'settingable_type',
  type: 'type',
  code: 'code',
  status: 'status',
  title: 'title',
  description: 'description',
  value: 'value'
};

exports.Prisma.Bitrix_tokensScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  client_id: 'client_id',
  client_secret: 'client_secret',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  expires_at: 'expires_at',
  application_token: 'application_token',
  member_id: 'member_id',
  bitrix_app_id: 'bitrix_app_id'
};

exports.Prisma.Btx_contactsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  title: 'title',
  code: 'code',
  portal_id: 'portal_id'
};

exports.Prisma.BxDocumentDealScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  portalId: 'portalId',
  dealId: 'dealId',
  userId: 'userId',
  infoblockId: 'infoblockId',
  supplyId: 'supplyId',
  contractId: 'contractId',
  complectId: 'complectId',
  actionId: 'actionId',
  regionId: 'regionId',
  favoriteId: 'favoriteId',
  templateId: 'templateId',
  title: 'title',
  domain: 'domain',
  dealName: 'dealName',
  app: 'app',
  global: 'global',
  currentComplect: 'currentComplect',
  od: 'od',
  result: 'result',
  contract: 'contract',
  product: 'product',
  rows: 'rows',
  regions: 'regions',
  tags: 'tags',
  department: 'department',
  target: 'target',
  promotionName: 'promotionName',
  promotion: 'promotion',
  code: 'code',
  order: 'order',
  group: 'group',
  clientGroup: 'clientGroup',
  clientType: 'clientType',
  clientCompanyName: 'clientCompanyName',
  clientName: 'clientName',
  clientPosition: 'clientPosition',
  clientNameCase: 'clientNameCase',
  clientPositionCase: 'clientPositionCase',
  settings: 'settings',
  saleText: 'saleText',
  letterText: 'letterText',
  options: 'options',
  offer: 'offer',
  invoice: 'invoice',
  contractDocument: 'contractDocument',
  act: 'act',
  isFavorite: 'isFavorite',
  shadowDealId: 'shadowDealId',
  serviceSmartId: 'serviceSmartId',
  smartId: 'smartId'
};

exports.Prisma.Bx_rqsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  portal_id: 'portal_id',
  name: 'name',
  code: 'code',
  type: 'type',
  bitrix_id: 'bitrix_id',
  xml_id: 'xml_id',
  entity_type_id: 'entity_type_id',
  country_id: 'country_id',
  is_active: 'is_active',
  sort: 'sort'
};

exports.Prisma.Complect_infoblockScalarFieldEnum = {
  id: 'id',
  complect_id: 'complect_id',
  infoblock_id: 'infoblock_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ComplectsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  fullName: 'fullName',
  shortName: 'shortName',
  description: 'description',
  code: 'code',
  type: 'type',
  color: 'color',
  weight: 'weight',
  abs: 'abs',
  number: 'number',
  productType: 'productType',
  withABS: 'withABS',
  withConsalting: 'withConsalting',
  withServices: 'withServices',
  withLt: 'withLt',
  isChanging: 'isChanging',
  withDefault: 'withDefault',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Garant_packagesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  infoblock_id: 'infoblock_id',
  info_group_id: 'info_group_id',
  name: 'name',
  fullName: 'fullName',
  shortName: 'shortName',
  description: 'description',
  code: 'code',
  type: 'type',
  color: 'color',
  weight: 'weight',
  abs: 'abs',
  number: 'number',
  productType: 'productType',
  withABS: 'withABS',
  isChanging: 'isChanging',
  withDefault: 'withDefault'
};

exports.Prisma.Garant_prof_pricesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  complect_id: 'complect_id',
  garant_package_id: 'garant_package_id',
  supply_id: 'supply_id',
  region_type: 'region_type',
  supply_type: 'supply_type',
  value: 'value',
  discount: 'discount'
};

exports.Prisma.Google_tokensScalarFieldEnum = {
  id: 'id',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Infoblock_info_groupScalarFieldEnum = {
  id: 'id',
  infoblock_id: 'infoblock_id',
  info_group_id: 'info_group_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Infoblock_packageScalarFieldEnum = {
  id: 'id',
  package_id: 'package_id',
  infoblock_id: 'infoblock_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Offer_template_portalScalarFieldEnum = {
  id: 'id',
  offer_template_id: 'offer_template_id',
  portal_id: 'portal_id',
  is_default: 'is_default',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Offer_templatesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  visibility: 'visibility',
  is_default: 'is_default',
  file_path: 'file_path',
  demo_path: 'demo_path',
  type: 'type',
  rules: 'rules',
  price_settings: 'price_settings',
  infoblock_settings: 'infoblock_settings',
  letter_text: 'letter_text',
  sale_text_1: 'sale_text_1',
  sale_text_2: 'sale_text_2',
  sale_text_3: 'sale_text_3',
  sale_text_4: 'sale_text_4',
  sale_text_5: 'sale_text_5',
  field_codes: 'field_codes',
  style: 'style',
  color: 'color',
  code: 'code',
  tags: 'tags',
  is_active: 'is_active',
  counter: 'counter',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Offer_zakupki_settingsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  portal_id: 'portal_id',
  bxUserId: 'bxUserId',
  offer_template_id: 'offer_template_id',
  domain: 'domain',
  name: 'name',
  provider1_id: 'provider1_id',
  provider1_name: 'provider1_name',
  provider1_shortname: 'provider1_shortname',
  provider1_address: 'provider1_address',
  provider1_phone: 'provider1_phone',
  provider1_email: 'provider1_email',
  provider1_letter_text: 'provider1_letter_text',
  provider1_inn: 'provider1_inn',
  provider1_director: 'provider1_director',
  provider1_position: 'provider1_position',
  provider1_logo: 'provider1_logo',
  provider1_stamp: 'provider1_stamp',
  provider1_signature: 'provider1_signature',
  provider1_price_coefficient: 'provider1_price_coefficient',
  provider2_id: 'provider2_id',
  provider2_name: 'provider2_name',
  provider2_shortname: 'provider2_shortname',
  provider2_address: 'provider2_address',
  provider2_phone: 'provider2_phone',
  provider2_email: 'provider2_email',
  provider2_letter_text: 'provider2_letter_text',
  provider2_inn: 'provider2_inn',
  provider2_director: 'provider2_director',
  provider2_position: 'provider2_position',
  provider2_logo: 'provider2_logo',
  provider2_stamp: 'provider2_stamp',
  provider2_signature: 'provider2_signature',
  provider2_price_coefficient: 'provider2_price_coefficient',
  is_default: 'is_default',
  is_current: 'is_current',
  is_one_document: 'is_one_document',
  provider1_price_settings: 'provider1_price_settings',
  provider2_price_settings: 'provider2_price_settings'
};

exports.Prisma.Provider_currentsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  domain: 'domain',
  portalId: 'portalId',
  bxUserId: 'bxUserId',
  agentId: 'agentId',
  providerName: 'providerName',
  name: 'name'
};

exports.Prisma.Report_settingsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  domain: 'domain',
  portalId: 'portalId',
  bxUserId: 'bxUserId',
  filter: 'filter',
  filters: 'filters',
  grafics: 'grafics',
  department: 'department',
  date: 'date',
  dates: 'dates',
  other: 'other'
};

exports.Prisma.SuppliesScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  fullName: 'fullName',
  shortName: 'shortName',
  saleName_1: 'saleName_1',
  saleName_2: 'saleName_2',
  saleName_3: 'saleName_3',
  usersQuantity: 'usersQuantity',
  description: 'description',
  code: 'code',
  type: 'type',
  color: 'color',
  coefficient: 'coefficient',
  contractName: 'contractName',
  contractPropComment: 'contractPropComment',
  contractPropEmail: 'contractPropEmail',
  contractPropLoginsQuantity: 'contractPropLoginsQuantity',
  lcontractName: 'lcontractName',
  lcontractPropComment: 'lcontractPropComment',
  lcontractPropEmail: 'lcontractPropEmail'
};

exports.Prisma.TranscriptionsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  provider: 'provider',
  activity_id: 'activity_id',
  file_id: 'file_id',
  in_comment: 'in_comment',
  status: 'status',
  text: 'text',
  symbols_count: 'symbols_count',
  price: 'price',
  duration: 'duration',
  domain: 'domain',
  user_id: 'user_id',
  user_name: 'user_name',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  entity_name: 'entity_name',
  app: 'app',
  department: 'department',
  user_comment: 'user_comment',
  owner_comment: 'owner_comment',
  user_mark: 'user_mark',
  owner_mark: 'owner_mark',
  user_result: 'user_result',
  report_result: 'report_result',
  in_report: 'in_report',
  report_item_id: 'report_item_id',
  portal_id: 'portal_id'
};

exports.Prisma.User_selected_templatesScalarFieldEnum = {
  id: 'id',
  bitrix_user_id: 'bitrix_user_id',
  portal_id: 'portal_id',
  offer_template_id: 'offer_template_id',
  is_current: 'is_current',
  is_favorite: 'is_favorite',
  is_active: 'is_active',
  price_settings: 'price_settings',
  infoblock_settings: 'infoblock_settings',
  letter_text: 'letter_text',
  sale_text_1: 'sale_text_1',
  sale_text_2: 'sale_text_2',
  sale_text_3: 'sale_text_3',
  sale_text_4: 'sale_text_4',
  sale_text_5: 'sale_text_5',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Portal_regionScalarFieldEnum = {
  portal_id: 'portal_id',
  region_id: 'region_id',
  own_abs: 'own_abs',
  own_tax: 'own_tax',
  own_tax_abs: 'own_tax_abs'
};

exports.Prisma.RegionsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  number: 'number',
  title: 'title',
  code: 'code',
  infoblock: 'infoblock',
  abs: 'abs',
  tax: 'tax',
  tax_abs: 'tax_abs'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.agentsOrderByRelevanceFieldEnum = {
  type: 'type',
  name: 'name',
  code: 'code',
  number: 'number'
};

exports.Prisma.bitrixfield_itemsOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code'
};

exports.Prisma.bitrixfieldsOrderByRelevanceFieldEnum = {
  entity_type: 'entity_type',
  parent_type: 'parent_type',
  type: 'type',
  title: 'title',
  name: 'name',
  bitrixId: 'bitrixId',
  bitrixCamelId: 'bitrixCamelId',
  code: 'code'
};

exports.Prisma.bitrixlistsOrderByRelevanceFieldEnum = {
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title'
};

exports.Prisma.btx_categoriesOrderByRelevanceFieldEnum = {
  entity_type: 'entity_type',
  parent_type: 'parent_type',
  type: 'type',
  group: 'group',
  title: 'title',
  name: 'name',
  bitrixId: 'bitrixId',
  bitrixCamelId: 'bitrixCamelId',
  code: 'code'
};

exports.Prisma.btx_companiesOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code'
};

exports.Prisma.btx_dealsOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code'
};

exports.Prisma.btx_leadsOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code'
};

exports.Prisma.btx_rpasOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code',
  type: 'type',
  image: 'image',
  typeId: 'typeId',
  description: 'description'
};

exports.Prisma.btx_stagesOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code',
  bitrixId: 'bitrixId',
  color: 'color'
};

exports.Prisma.callingsOrderByRelevanceFieldEnum = {
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title'
};

exports.Prisma.clientsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.contractsOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code',
  type: 'type',
  template: 'template',
  productName: 'productName',
  product: 'product',
  service: 'service',
  description: 'description',
  comment: 'comment',
  comment1: 'comment1',
  comment2: 'comment2'
};

exports.Prisma.countersOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title'
};

exports.Prisma.deal_document_favoritesOrderByRelevanceFieldEnum = {
  domain: 'domain',
  title: 'title',
  complectName: 'complectName',
  dealName: 'dealName',
  description: 'description',
  settings: 'settings',
  tag: 'tag',
  type: 'type',
  group: 'group',
  promotionName: 'promotionName',
  promotionCode: 'promotionCode',
  targetAudience: 'targetAudience'
};

exports.Prisma.deal_document_optionsOrderByRelevanceFieldEnum = {
  salePhrase: 'salePhrase',
  withStamp: 'withStamp',
  isPriceFirst: 'isPriceFirst',
  withManager: 'withManager',
  iblocksStyle: 'iblocksStyle',
  describStyle: 'describStyle',
  otherStyle: 'otherStyle',
  priceDiscount: 'priceDiscount',
  priceYear: 'priceYear',
  priceDefault: 'priceDefault',
  priceSupply: 'priceSupply',
  priceOptions: 'priceOptions',
  otherPrice: 'otherPrice',
  otherSettings: 'otherSettings',
  domain: 'domain'
};

exports.Prisma.dealsOrderByRelevanceFieldEnum = {
  domain: 'domain',
  dealName: 'dealName',
  app: 'app',
  global: 'global',
  currentComplect: 'currentComplect',
  od: 'od',
  result: 'result',
  contract: 'contract',
  product: 'product',
  rows: 'rows',
  regions: 'regions',
  app_long: 'app_long',
  global_long: 'global_long',
  currentComplect_long: 'currentComplect_long',
  od_long: 'od_long',
  result_long: 'result_long',
  contract_long: 'contract_long',
  product_long: 'product_long',
  rows_long: 'rows_long',
  regions_long: 'regions_long'
};

exports.Prisma.departamentsOrderByRelevanceFieldEnum = {
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title'
};

exports.Prisma.f_itemsOrderByRelevanceFieldEnum = {
  code: 'code',
  value: 'value',
  bitrixId: 'bitrixId',
  fieldNumber: 'fieldNumber'
};

exports.Prisma.failed_jobsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception'
};

exports.Prisma.fieldsOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  type: 'type',
  value: 'value',
  description: 'description',
  bitixId: 'bitixId',
  bitrixTemplateId: 'bitrixTemplateId'
};

exports.Prisma.filesOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  type: 'type',
  path: 'path',
  parent: 'parent',
  parent_type: 'parent_type',
  availability: 'availability',
  entity_type: 'entity_type'
};

exports.Prisma.infoblocksOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  description: 'description',
  descriptionForSale: 'descriptionForSale',
  shortDescription: 'shortDescription',
  weight: 'weight',
  code: 'code',
  tag: 'tag'
};

exports.Prisma.info_groupsOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  title: 'title',
  description: 'description',
  descriptionForSale: 'descriptionForSale',
  shortDescription: 'shortDescription',
  type: 'type',
  productType: 'productType'
};

exports.Prisma.jobsOrderByRelevanceFieldEnum = {
  queue: 'queue',
  payload: 'payload'
};

exports.Prisma.linksOrderByRelevanceFieldEnum = {
  url: 'url'
};

exports.Prisma.measuresOrderByRelevanceFieldEnum = {
  name: 'name',
  shortName: 'shortName',
  fullName: 'fullName',
  code: 'code',
  type: 'type'
};

exports.Prisma.migrationsOrderByRelevanceFieldEnum = {
  migration: 'migration'
};

exports.Prisma.personal_access_tokensOrderByRelevanceFieldEnum = {
  tokenable_type: 'tokenable_type',
  name: 'name',
  token: 'token',
  abilities: 'abilities'
};

exports.Prisma.portal_contractsOrderByRelevanceFieldEnum = {
  title: 'title',
  template: 'template',
  productName: 'productName',
  description: 'description'
};

exports.Prisma.portal_measureOrderByRelevanceFieldEnum = {
  bitrixId: 'bitrixId',
  name: 'name',
  shortName: 'shortName',
  fullName: 'fullName'
};

exports.Prisma.portalsOrderByRelevanceFieldEnum = {
  domain: 'domain',
  key: 'key',
  C_REST_CLIENT_ID: 'C_REST_CLIENT_ID',
  C_REST_CLIENT_SECRET: 'C_REST_CLIENT_SECRET',
  C_REST_WEB_HOOK_URL: 'C_REST_WEB_HOOK_URL'
};

exports.Prisma.price_row_cellsOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  type: 'type',
  value: 'value',
  icon: 'icon'
};

exports.Prisma.rq_counterOrderByRelevanceFieldEnum = {
  type: 'type',
  prefix: 'prefix',
  postfix: 'postfix'
};

exports.Prisma.rqsOrderByRelevanceFieldEnum = {
  name: 'name',
  number: 'number',
  type: 'type',
  fullname: 'fullname',
  shortname: 'shortname',
  director: 'director',
  position: 'position',
  accountant: 'accountant',
  based: 'based',
  inn: 'inn',
  kpp: 'kpp',
  ogrn: 'ogrn',
  ogrnip: 'ogrnip',
  personName: 'personName',
  document: 'document',
  docSer: 'docSer',
  docNum: 'docNum',
  docDate: 'docDate',
  docIssuedBy: 'docIssuedBy',
  docDepCode: 'docDepCode',
  registredAdress: 'registredAdress',
  primaryAdresss: 'primaryAdresss',
  email: 'email',
  garantEmail: 'garantEmail',
  phone: 'phone',
  assigned: 'assigned',
  assignedPhone: 'assignedPhone',
  other: 'other',
  bank: 'bank',
  bik: 'bik',
  rs: 'rs',
  ks: 'ks',
  bankAdress: 'bankAdress',
  bankOther: 'bankOther'
};

exports.Prisma.smartsOrderByRelevanceFieldEnum = {
  type: 'type',
  group: 'group',
  name: 'name',
  title: 'title',
  forStage: 'forStage',
  forFilter: 'forFilter',
  crm: 'crm'
};

exports.Prisma.t_fieldsOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name'
};

exports.Prisma.telescope_entriesOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  batch_id: 'batch_id',
  family_hash: 'family_hash',
  type: 'type',
  content: 'content'
};

exports.Prisma.telescope_entries_tagsOrderByRelevanceFieldEnum = {
  entry_uuid: 'entry_uuid',
  tag: 'tag'
};

exports.Prisma.telescope_monitoringOrderByRelevanceFieldEnum = {
  tag: 'tag'
};

exports.Prisma.template_counterOrderByRelevanceFieldEnum = {
  value: 'value',
  prefix: 'prefix'
};

exports.Prisma.templatesOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  type: 'type',
  link: 'link'
};

exports.Prisma.timezonesOrderByRelevanceFieldEnum = {
  type: 'type',
  name: 'name',
  title: 'title',
  value: 'value',
  offset: 'offset'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  name: 'name',
  surname: 'surname',
  email: 'email',
  photo: 'photo',
  password: 'password',
  two_factor_secret: 'two_factor_secret',
  two_factor_recovery_codes: 'two_factor_recovery_codes',
  remember_token: 'remember_token'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.aisOrderByRelevanceFieldEnum = {
  provider: 'provider',
  activity_id: 'activity_id',
  file_id: 'file_id',
  report_item_id: 'report_item_id',
  status: 'status',
  result: 'result',
  domain: 'domain',
  user_name: 'user_name',
  entity_type: 'entity_type',
  entity_name: 'entity_name',
  report_result: 'report_result',
  user_comment: 'user_comment',
  owner_comment: 'owner_comment',
  user_mark: 'user_mark',
  owner_mark: 'owner_mark',
  app: 'app',
  department: 'department',
  type: 'type',
  model: 'model'
};

exports.Prisma.bitrix_app_placementsOrderByRelevanceFieldEnum = {
  code: 'code',
  type: 'type',
  group: 'group',
  status: 'status',
  bitrix_heandler: 'bitrix_heandler',
  public_heandler: 'public_heandler',
  bitrix_codes: 'bitrix_codes'
};

exports.Prisma.bitrix_app_secretsOrderByRelevanceFieldEnum = {
  group: 'group',
  type: 'type',
  code: 'code',
  client_id: 'client_id',
  client_secret: 'client_secret'
};

exports.Prisma.bitrix_appsOrderByRelevanceFieldEnum = {
  group: 'group',
  type: 'type',
  code: 'code',
  status: 'status'
};

exports.Prisma.bitrix_settingsOrderByRelevanceFieldEnum = {
  settingable_type: 'settingable_type',
  type: 'type',
  code: 'code',
  status: 'status',
  title: 'title',
  description: 'description',
  value: 'value'
};

exports.Prisma.bitrix_tokensOrderByRelevanceFieldEnum = {
  client_id: 'client_id',
  client_secret: 'client_secret',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  application_token: 'application_token',
  member_id: 'member_id'
};

exports.Prisma.btx_contactsOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  code: 'code'
};

exports.Prisma.BxDocumentDealOrderByRelevanceFieldEnum = {
  title: 'title',
  domain: 'domain',
  dealName: 'dealName',
  app: 'app',
  global: 'global',
  currentComplect: 'currentComplect',
  od: 'od',
  result: 'result',
  contract: 'contract',
  product: 'product',
  rows: 'rows',
  regions: 'regions',
  tags: 'tags',
  department: 'department',
  target: 'target',
  promotionName: 'promotionName',
  promotion: 'promotion',
  code: 'code',
  group: 'group',
  clientGroup: 'clientGroup',
  clientType: 'clientType',
  clientCompanyName: 'clientCompanyName',
  clientName: 'clientName',
  clientPosition: 'clientPosition',
  clientNameCase: 'clientNameCase',
  clientPositionCase: 'clientPositionCase',
  settings: 'settings',
  saleText: 'saleText',
  letterText: 'letterText',
  options: 'options',
  offer: 'offer',
  invoice: 'invoice',
  contractDocument: 'contractDocument',
  act: 'act'
};

exports.Prisma.bx_rqsOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  type: 'type',
  bitrix_id: 'bitrix_id',
  xml_id: 'xml_id',
  entity_type_id: 'entity_type_id',
  country_id: 'country_id'
};

exports.Prisma.complectsOrderByRelevanceFieldEnum = {
  name: 'name',
  fullName: 'fullName',
  shortName: 'shortName',
  description: 'description',
  code: 'code',
  type: 'type',
  color: 'color',
  productType: 'productType'
};

exports.Prisma.garant_packagesOrderByRelevanceFieldEnum = {
  name: 'name',
  fullName: 'fullName',
  shortName: 'shortName',
  description: 'description',
  code: 'code',
  type: 'type',
  color: 'color',
  productType: 'productType'
};

exports.Prisma.garant_prof_pricesOrderByRelevanceFieldEnum = {
  region_type: 'region_type',
  supply_type: 'supply_type'
};

exports.Prisma.google_tokensOrderByRelevanceFieldEnum = {
  access_token: 'access_token',
  refresh_token: 'refresh_token'
};

exports.Prisma.offer_templatesOrderByRelevanceFieldEnum = {
  name: 'name',
  file_path: 'file_path',
  demo_path: 'demo_path',
  type: 'type',
  rules: 'rules',
  price_settings: 'price_settings',
  infoblock_settings: 'infoblock_settings',
  letter_text: 'letter_text',
  sale_text_1: 'sale_text_1',
  sale_text_2: 'sale_text_2',
  sale_text_3: 'sale_text_3',
  sale_text_4: 'sale_text_4',
  sale_text_5: 'sale_text_5',
  field_codes: 'field_codes',
  style: 'style',
  color: 'color',
  code: 'code',
  tags: 'tags'
};

exports.Prisma.offer_zakupki_settingsOrderByRelevanceFieldEnum = {
  domain: 'domain',
  name: 'name',
  provider1_name: 'provider1_name',
  provider1_shortname: 'provider1_shortname',
  provider1_address: 'provider1_address',
  provider1_phone: 'provider1_phone',
  provider1_email: 'provider1_email',
  provider1_letter_text: 'provider1_letter_text',
  provider1_inn: 'provider1_inn',
  provider1_director: 'provider1_director',
  provider1_position: 'provider1_position',
  provider1_logo: 'provider1_logo',
  provider1_stamp: 'provider1_stamp',
  provider1_signature: 'provider1_signature',
  provider2_name: 'provider2_name',
  provider2_shortname: 'provider2_shortname',
  provider2_address: 'provider2_address',
  provider2_phone: 'provider2_phone',
  provider2_email: 'provider2_email',
  provider2_letter_text: 'provider2_letter_text',
  provider2_inn: 'provider2_inn',
  provider2_director: 'provider2_director',
  provider2_position: 'provider2_position',
  provider2_logo: 'provider2_logo',
  provider2_stamp: 'provider2_stamp',
  provider2_signature: 'provider2_signature',
  provider1_price_settings: 'provider1_price_settings',
  provider2_price_settings: 'provider2_price_settings'
};

exports.Prisma.provider_currentsOrderByRelevanceFieldEnum = {
  domain: 'domain',
  name: 'name'
};

exports.Prisma.report_settingsOrderByRelevanceFieldEnum = {
  domain: 'domain',
  filter: 'filter',
  filters: 'filters',
  grafics: 'grafics',
  department: 'department',
  date: 'date',
  dates: 'dates',
  other: 'other'
};

exports.Prisma.suppliesOrderByRelevanceFieldEnum = {
  name: 'name',
  fullName: 'fullName',
  shortName: 'shortName',
  saleName_1: 'saleName_1',
  saleName_2: 'saleName_2',
  saleName_3: 'saleName_3',
  description: 'description',
  code: 'code',
  type: 'type',
  color: 'color',
  contractName: 'contractName',
  contractPropComment: 'contractPropComment',
  contractPropEmail: 'contractPropEmail',
  contractPropLoginsQuantity: 'contractPropLoginsQuantity',
  lcontractName: 'lcontractName',
  lcontractPropComment: 'lcontractPropComment',
  lcontractPropEmail: 'lcontractPropEmail'
};

exports.Prisma.transcriptionsOrderByRelevanceFieldEnum = {
  provider: 'provider',
  activity_id: 'activity_id',
  file_id: 'file_id',
  status: 'status',
  text: 'text',
  symbols_count: 'symbols_count',
  price: 'price',
  duration: 'duration',
  domain: 'domain',
  user_id: 'user_id',
  user_name: 'user_name',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  entity_name: 'entity_name',
  app: 'app',
  department: 'department',
  user_comment: 'user_comment',
  owner_comment: 'owner_comment',
  user_mark: 'user_mark',
  owner_mark: 'owner_mark',
  report_result: 'report_result',
  report_item_id: 'report_item_id',
  portal_id: 'portal_id'
};

exports.Prisma.user_selected_templatesOrderByRelevanceFieldEnum = {
  price_settings: 'price_settings',
  infoblock_settings: 'infoblock_settings',
  letter_text: 'letter_text',
  sale_text_1: 'sale_text_1',
  sale_text_2: 'sale_text_2',
  sale_text_3: 'sale_text_3',
  sale_text_4: 'sale_text_4',
  sale_text_5: 'sale_text_5'
};

exports.Prisma.regionsOrderByRelevanceFieldEnum = {
  title: 'title',
  code: 'code',
  infoblock: 'infoblock'
};
exports.offer_templates_visibility = exports.$Enums.offer_templates_visibility = {
  public: 'public',
  private: 'private',
  user: 'user'
};

exports.Prisma.ModelName = {
  agents: 'agents',
  bitrixfield_items: 'bitrixfield_items',
  bitrixfields: 'bitrixfields',
  bitrixlists: 'bitrixlists',
  btx_categories: 'btx_categories',
  btx_companies: 'btx_companies',
  btx_deals: 'btx_deals',
  btx_leads: 'btx_leads',
  btx_rpas: 'btx_rpas',
  btx_stages: 'btx_stages',
  callings: 'callings',
  clients: 'clients',
  contracts: 'contracts',
  counters: 'counters',
  deal_document_favorites: 'deal_document_favorites',
  deal_document_options: 'deal_document_options',
  deals: 'deals',
  departaments: 'departaments',
  documents: 'documents',
  f_items: 'f_items',
  failed_jobs: 'failed_jobs',
  fields: 'fields',
  files: 'files',
  infoblocks: 'infoblocks',
  info_groups: 'info_groups',
  jobs: 'jobs',
  links: 'links',
  measures: 'measures',
  migrations: 'migrations',
  offers: 'offers',
  personal_access_tokens: 'personal_access_tokens',
  portal_contracts: 'portal_contracts',
  portal_measure: 'portal_measure',
  portals: 'portals',
  price_row_cells: 'price_row_cells',
  rq_counter: 'rq_counter',
  rqs: 'rqs',
  smarts: 'smarts',
  t_fields: 't_fields',
  telescope_entries: 'telescope_entries',
  telescope_entries_tags: 'telescope_entries_tags',
  telescope_monitoring: 'telescope_monitoring',
  template_counter: 'template_counter',
  template_field: 'template_field',
  templates: 'templates',
  timezones: 'timezones',
  users: 'users',
  ais: 'ais',
  bitrix_app_placements: 'bitrix_app_placements',
  bitrix_app_secrets: 'bitrix_app_secrets',
  bitrix_apps: 'bitrix_apps',
  bitrix_settings: 'bitrix_settings',
  bitrix_tokens: 'bitrix_tokens',
  btx_contacts: 'btx_contacts',
  BxDocumentDeal: 'BxDocumentDeal',
  bx_rqs: 'bx_rqs',
  complect_infoblock: 'complect_infoblock',
  complects: 'complects',
  garant_packages: 'garant_packages',
  garant_prof_prices: 'garant_prof_prices',
  google_tokens: 'google_tokens',
  infoblock_info_group: 'infoblock_info_group',
  infoblock_package: 'infoblock_package',
  offer_template_portal: 'offer_template_portal',
  offer_templates: 'offer_templates',
  offer_zakupki_settings: 'offer_zakupki_settings',
  provider_currents: 'provider_currents',
  report_settings: 'report_settings',
  supplies: 'supplies',
  transcriptions: 'transcriptions',
  user_selected_templates: 'user_selected_templates',
  portal_region: 'portal_region',
  regions: 'regions'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
